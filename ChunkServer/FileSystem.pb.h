// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FileSystem.proto

#ifndef PROTOBUF_FileSystem_2eproto__INCLUDED
#define PROTOBUF_FileSystem_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace myfs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_FileSystem_2eproto();
void protobuf_AssignDesc_FileSystem_2eproto();
void protobuf_ShutdownFile_FileSystem_2eproto();

class GetAttrReq;
class GetAttrRep;
class GetAttrRep_Stat;
class ReadDirReq;
class ReadDirRep;
class ReadDirRep_DirEnt;
class MkNodReq;
class MkNodRep;
class MkDirReq;
class MkDirRep;
class UnlinkReq;
class UnlinkRep;
class RmDirReq;
class RmDirRep;
class RenameReq;
class RenameRep;
class SearchDirReq;
class SearchDirRep;
class AddChunkReq;
class AddChunkRep;
class DelChunkReq;
class DelChunkRep;
class WriteDataReq;
class WriteDataReq_CSAddr;
class WriteDataRep;
class WriteReq;
class WriteReq_CSAddr;
class WriteRep;
class ReadReq;
class ReadRep;

// ===================================================================

class GetAttrReq : public ::google::protobuf::Message {
 public:
  GetAttrReq();
  virtual ~GetAttrReq();
  
  GetAttrReq(const GetAttrReq& from);
  
  inline GetAttrReq& operator=(const GetAttrReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAttrReq& default_instance();
  
  void Swap(GetAttrReq* other);
  
  // implements Message ----------------------------------------------
  
  GetAttrReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAttrReq& from);
  void MergeFrom(const GetAttrReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string path = 1;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  
  // @@protoc_insertion_point(class_scope:myfs.GetAttrReq)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* path_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static GetAttrReq* default_instance_;
};
// -------------------------------------------------------------------

class GetAttrRep_Stat : public ::google::protobuf::Message {
 public:
  GetAttrRep_Stat();
  virtual ~GetAttrRep_Stat();
  
  GetAttrRep_Stat(const GetAttrRep_Stat& from);
  
  inline GetAttrRep_Stat& operator=(const GetAttrRep_Stat& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAttrRep_Stat& default_instance();
  
  void Swap(GetAttrRep_Stat* other);
  
  // implements Message ----------------------------------------------
  
  GetAttrRep_Stat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAttrRep_Stat& from);
  void MergeFrom(const GetAttrRep_Stat& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 mode = 1;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 1;
  inline ::google::protobuf::int32 mode() const;
  inline void set_mode(::google::protobuf::int32 value);
  
  // required int32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::int32 uid() const;
  inline void set_uid(::google::protobuf::int32 value);
  
  // required int32 gid = 3;
  inline bool has_gid() const;
  inline void clear_gid();
  static const int kGidFieldNumber = 3;
  inline ::google::protobuf::int32 gid() const;
  inline void set_gid(::google::protobuf::int32 value);
  
  // required int32 size = 4;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 4;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);
  
  // required int32 atime = 5;
  inline bool has_atime() const;
  inline void clear_atime();
  static const int kAtimeFieldNumber = 5;
  inline ::google::protobuf::int32 atime() const;
  inline void set_atime(::google::protobuf::int32 value);
  
  // required int32 mtime = 6;
  inline bool has_mtime() const;
  inline void clear_mtime();
  static const int kMtimeFieldNumber = 6;
  inline ::google::protobuf::int32 mtime() const;
  inline void set_mtime(::google::protobuf::int32 value);
  
  // required int32 ctime = 7;
  inline bool has_ctime() const;
  inline void clear_ctime();
  static const int kCtimeFieldNumber = 7;
  inline ::google::protobuf::int32 ctime() const;
  inline void set_ctime(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.GetAttrRep.Stat)
 private:
  inline void set_has_mode();
  inline void clear_has_mode();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_gid();
  inline void clear_has_gid();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_atime();
  inline void clear_has_atime();
  inline void set_has_mtime();
  inline void clear_has_mtime();
  inline void set_has_ctime();
  inline void clear_has_ctime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 mode_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 gid_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 atime_;
  ::google::protobuf::int32 mtime_;
  ::google::protobuf::int32 ctime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static GetAttrRep_Stat* default_instance_;
};
// -------------------------------------------------------------------

class GetAttrRep : public ::google::protobuf::Message {
 public:
  GetAttrRep();
  virtual ~GetAttrRep();
  
  GetAttrRep(const GetAttrRep& from);
  
  inline GetAttrRep& operator=(const GetAttrRep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAttrRep& default_instance();
  
  void Swap(GetAttrRep* other);
  
  // implements Message ----------------------------------------------
  
  GetAttrRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAttrRep& from);
  void MergeFrom(const GetAttrRep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef GetAttrRep_Stat Stat;
  
  // accessors -------------------------------------------------------
  
  // required .myfs.GetAttrRep.Stat st = 1;
  inline bool has_st() const;
  inline void clear_st();
  static const int kStFieldNumber = 1;
  inline const ::myfs::GetAttrRep_Stat& st() const;
  inline ::myfs::GetAttrRep_Stat* mutable_st();
  inline ::myfs::GetAttrRep_Stat* release_st();
  
  // required int32 returnVal = 2;
  inline bool has_returnval() const;
  inline void clear_returnval();
  static const int kReturnValFieldNumber = 2;
  inline ::google::protobuf::int32 returnval() const;
  inline void set_returnval(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.GetAttrRep)
 private:
  inline void set_has_st();
  inline void clear_has_st();
  inline void set_has_returnval();
  inline void clear_has_returnval();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::myfs::GetAttrRep_Stat* st_;
  ::google::protobuf::int32 returnval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static GetAttrRep* default_instance_;
};
// -------------------------------------------------------------------

class ReadDirReq : public ::google::protobuf::Message {
 public:
  ReadDirReq();
  virtual ~ReadDirReq();
  
  ReadDirReq(const ReadDirReq& from);
  
  inline ReadDirReq& operator=(const ReadDirReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadDirReq& default_instance();
  
  void Swap(ReadDirReq* other);
  
  // implements Message ----------------------------------------------
  
  ReadDirReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadDirReq& from);
  void MergeFrom(const ReadDirReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string path = 1;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  
  // @@protoc_insertion_point(class_scope:myfs.ReadDirReq)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* path_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static ReadDirReq* default_instance_;
};
// -------------------------------------------------------------------

class ReadDirRep_DirEnt : public ::google::protobuf::Message {
 public:
  ReadDirRep_DirEnt();
  virtual ~ReadDirRep_DirEnt();
  
  ReadDirRep_DirEnt(const ReadDirRep_DirEnt& from);
  
  inline ReadDirRep_DirEnt& operator=(const ReadDirRep_DirEnt& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadDirRep_DirEnt& default_instance();
  
  void Swap(ReadDirRep_DirEnt* other);
  
  // implements Message ----------------------------------------------
  
  ReadDirRep_DirEnt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadDirRep_DirEnt& from);
  void MergeFrom(const ReadDirRep_DirEnt& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.ReadDirRep.DirEnt)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::int32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static ReadDirRep_DirEnt* default_instance_;
};
// -------------------------------------------------------------------

class ReadDirRep : public ::google::protobuf::Message {
 public:
  ReadDirRep();
  virtual ~ReadDirRep();
  
  ReadDirRep(const ReadDirRep& from);
  
  inline ReadDirRep& operator=(const ReadDirRep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadDirRep& default_instance();
  
  void Swap(ReadDirRep* other);
  
  // implements Message ----------------------------------------------
  
  ReadDirRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadDirRep& from);
  void MergeFrom(const ReadDirRep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ReadDirRep_DirEnt DirEnt;
  
  // accessors -------------------------------------------------------
  
  // repeated .myfs.ReadDirRep.DirEnt dirEnts = 1;
  inline int dirents_size() const;
  inline void clear_dirents();
  static const int kDirEntsFieldNumber = 1;
  inline const ::myfs::ReadDirRep_DirEnt& dirents(int index) const;
  inline ::myfs::ReadDirRep_DirEnt* mutable_dirents(int index);
  inline ::myfs::ReadDirRep_DirEnt* add_dirents();
  inline const ::google::protobuf::RepeatedPtrField< ::myfs::ReadDirRep_DirEnt >&
      dirents() const;
  inline ::google::protobuf::RepeatedPtrField< ::myfs::ReadDirRep_DirEnt >*
      mutable_dirents();
  
  // required int32 returnVal = 2;
  inline bool has_returnval() const;
  inline void clear_returnval();
  static const int kReturnValFieldNumber = 2;
  inline ::google::protobuf::int32 returnval() const;
  inline void set_returnval(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.ReadDirRep)
 private:
  inline void set_has_returnval();
  inline void clear_has_returnval();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::myfs::ReadDirRep_DirEnt > dirents_;
  ::google::protobuf::int32 returnval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static ReadDirRep* default_instance_;
};
// -------------------------------------------------------------------

class MkNodReq : public ::google::protobuf::Message {
 public:
  MkNodReq();
  virtual ~MkNodReq();
  
  MkNodReq(const MkNodReq& from);
  
  inline MkNodReq& operator=(const MkNodReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MkNodReq& default_instance();
  
  void Swap(MkNodReq* other);
  
  // implements Message ----------------------------------------------
  
  MkNodReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MkNodReq& from);
  void MergeFrom(const MkNodReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string path = 1;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  
  // required int32 mode = 2;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 2;
  inline ::google::protobuf::int32 mode() const;
  inline void set_mode(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.MkNodReq)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_mode();
  inline void clear_has_mode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* path_;
  ::google::protobuf::int32 mode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static MkNodReq* default_instance_;
};
// -------------------------------------------------------------------

class MkNodRep : public ::google::protobuf::Message {
 public:
  MkNodRep();
  virtual ~MkNodRep();
  
  MkNodRep(const MkNodRep& from);
  
  inline MkNodRep& operator=(const MkNodRep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MkNodRep& default_instance();
  
  void Swap(MkNodRep* other);
  
  // implements Message ----------------------------------------------
  
  MkNodRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MkNodRep& from);
  void MergeFrom(const MkNodRep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 returnVal = 1;
  inline bool has_returnval() const;
  inline void clear_returnval();
  static const int kReturnValFieldNumber = 1;
  inline ::google::protobuf::int32 returnval() const;
  inline void set_returnval(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.MkNodRep)
 private:
  inline void set_has_returnval();
  inline void clear_has_returnval();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 returnval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static MkNodRep* default_instance_;
};
// -------------------------------------------------------------------

class MkDirReq : public ::google::protobuf::Message {
 public:
  MkDirReq();
  virtual ~MkDirReq();
  
  MkDirReq(const MkDirReq& from);
  
  inline MkDirReq& operator=(const MkDirReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MkDirReq& default_instance();
  
  void Swap(MkDirReq* other);
  
  // implements Message ----------------------------------------------
  
  MkDirReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MkDirReq& from);
  void MergeFrom(const MkDirReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string path = 1;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  
  // required int32 mode = 2;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 2;
  inline ::google::protobuf::int32 mode() const;
  inline void set_mode(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.MkDirReq)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_mode();
  inline void clear_has_mode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* path_;
  ::google::protobuf::int32 mode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static MkDirReq* default_instance_;
};
// -------------------------------------------------------------------

class MkDirRep : public ::google::protobuf::Message {
 public:
  MkDirRep();
  virtual ~MkDirRep();
  
  MkDirRep(const MkDirRep& from);
  
  inline MkDirRep& operator=(const MkDirRep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MkDirRep& default_instance();
  
  void Swap(MkDirRep* other);
  
  // implements Message ----------------------------------------------
  
  MkDirRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MkDirRep& from);
  void MergeFrom(const MkDirRep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 returnVal = 1;
  inline bool has_returnval() const;
  inline void clear_returnval();
  static const int kReturnValFieldNumber = 1;
  inline ::google::protobuf::int32 returnval() const;
  inline void set_returnval(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.MkDirRep)
 private:
  inline void set_has_returnval();
  inline void clear_has_returnval();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 returnval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static MkDirRep* default_instance_;
};
// -------------------------------------------------------------------

class UnlinkReq : public ::google::protobuf::Message {
 public:
  UnlinkReq();
  virtual ~UnlinkReq();
  
  UnlinkReq(const UnlinkReq& from);
  
  inline UnlinkReq& operator=(const UnlinkReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlinkReq& default_instance();
  
  void Swap(UnlinkReq* other);
  
  // implements Message ----------------------------------------------
  
  UnlinkReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlinkReq& from);
  void MergeFrom(const UnlinkReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string path = 1;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  
  // @@protoc_insertion_point(class_scope:myfs.UnlinkReq)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* path_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static UnlinkReq* default_instance_;
};
// -------------------------------------------------------------------

class UnlinkRep : public ::google::protobuf::Message {
 public:
  UnlinkRep();
  virtual ~UnlinkRep();
  
  UnlinkRep(const UnlinkRep& from);
  
  inline UnlinkRep& operator=(const UnlinkRep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlinkRep& default_instance();
  
  void Swap(UnlinkRep* other);
  
  // implements Message ----------------------------------------------
  
  UnlinkRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnlinkRep& from);
  void MergeFrom(const UnlinkRep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 returnVal = 1;
  inline bool has_returnval() const;
  inline void clear_returnval();
  static const int kReturnValFieldNumber = 1;
  inline ::google::protobuf::int32 returnval() const;
  inline void set_returnval(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.UnlinkRep)
 private:
  inline void set_has_returnval();
  inline void clear_has_returnval();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 returnval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static UnlinkRep* default_instance_;
};
// -------------------------------------------------------------------

class RmDirReq : public ::google::protobuf::Message {
 public:
  RmDirReq();
  virtual ~RmDirReq();
  
  RmDirReq(const RmDirReq& from);
  
  inline RmDirReq& operator=(const RmDirReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RmDirReq& default_instance();
  
  void Swap(RmDirReq* other);
  
  // implements Message ----------------------------------------------
  
  RmDirReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RmDirReq& from);
  void MergeFrom(const RmDirReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string path = 1;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  
  // @@protoc_insertion_point(class_scope:myfs.RmDirReq)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* path_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static RmDirReq* default_instance_;
};
// -------------------------------------------------------------------

class RmDirRep : public ::google::protobuf::Message {
 public:
  RmDirRep();
  virtual ~RmDirRep();
  
  RmDirRep(const RmDirRep& from);
  
  inline RmDirRep& operator=(const RmDirRep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RmDirRep& default_instance();
  
  void Swap(RmDirRep* other);
  
  // implements Message ----------------------------------------------
  
  RmDirRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RmDirRep& from);
  void MergeFrom(const RmDirRep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 returnVal = 1;
  inline bool has_returnval() const;
  inline void clear_returnval();
  static const int kReturnValFieldNumber = 1;
  inline ::google::protobuf::int32 returnval() const;
  inline void set_returnval(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.RmDirRep)
 private:
  inline void set_has_returnval();
  inline void clear_has_returnval();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 returnval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static RmDirRep* default_instance_;
};
// -------------------------------------------------------------------

class RenameReq : public ::google::protobuf::Message {
 public:
  RenameReq();
  virtual ~RenameReq();
  
  RenameReq(const RenameReq& from);
  
  inline RenameReq& operator=(const RenameReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameReq& default_instance();
  
  void Swap(RenameReq* other);
  
  // implements Message ----------------------------------------------
  
  RenameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameReq& from);
  void MergeFrom(const RenameReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string from = 1;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 1;
  inline const ::std::string& from() const;
  inline void set_from(const ::std::string& value);
  inline void set_from(const char* value);
  inline void set_from(const char* value, size_t size);
  inline ::std::string* mutable_from();
  inline ::std::string* release_from();
  
  // required string to = 2;
  inline bool has_to() const;
  inline void clear_to();
  static const int kToFieldNumber = 2;
  inline const ::std::string& to() const;
  inline void set_to(const ::std::string& value);
  inline void set_to(const char* value);
  inline void set_to(const char* value, size_t size);
  inline ::std::string* mutable_to();
  inline ::std::string* release_to();
  
  // @@protoc_insertion_point(class_scope:myfs.RenameReq)
 private:
  inline void set_has_from();
  inline void clear_has_from();
  inline void set_has_to();
  inline void clear_has_to();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* from_;
  ::std::string* to_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static RenameReq* default_instance_;
};
// -------------------------------------------------------------------

class RenameRep : public ::google::protobuf::Message {
 public:
  RenameRep();
  virtual ~RenameRep();
  
  RenameRep(const RenameRep& from);
  
  inline RenameRep& operator=(const RenameRep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameRep& default_instance();
  
  void Swap(RenameRep* other);
  
  // implements Message ----------------------------------------------
  
  RenameRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameRep& from);
  void MergeFrom(const RenameRep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 returnVal = 1;
  inline bool has_returnval() const;
  inline void clear_returnval();
  static const int kReturnValFieldNumber = 1;
  inline ::google::protobuf::int32 returnval() const;
  inline void set_returnval(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.RenameRep)
 private:
  inline void set_has_returnval();
  inline void clear_has_returnval();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 returnval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static RenameRep* default_instance_;
};
// -------------------------------------------------------------------

class SearchDirReq : public ::google::protobuf::Message {
 public:
  SearchDirReq();
  virtual ~SearchDirReq();
  
  SearchDirReq(const SearchDirReq& from);
  
  inline SearchDirReq& operator=(const SearchDirReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchDirReq& default_instance();
  
  void Swap(SearchDirReq* other);
  
  // implements Message ----------------------------------------------
  
  SearchDirReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchDirReq& from);
  void MergeFrom(const SearchDirReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string path = 1;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  
  // @@protoc_insertion_point(class_scope:myfs.SearchDirReq)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* path_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static SearchDirReq* default_instance_;
};
// -------------------------------------------------------------------

class SearchDirRep : public ::google::protobuf::Message {
 public:
  SearchDirRep();
  virtual ~SearchDirRep();
  
  SearchDirRep(const SearchDirRep& from);
  
  inline SearchDirRep& operator=(const SearchDirRep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchDirRep& default_instance();
  
  void Swap(SearchDirRep* other);
  
  // implements Message ----------------------------------------------
  
  SearchDirRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchDirRep& from);
  void MergeFrom(const SearchDirRep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 returnVal = 1;
  inline bool has_returnval() const;
  inline void clear_returnval();
  static const int kReturnValFieldNumber = 1;
  inline ::google::protobuf::int32 returnval() const;
  inline void set_returnval(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.SearchDirRep)
 private:
  inline void set_has_returnval();
  inline void clear_has_returnval();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 returnval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static SearchDirRep* default_instance_;
};
// -------------------------------------------------------------------

class AddChunkReq : public ::google::protobuf::Message {
 public:
  AddChunkReq();
  virtual ~AddChunkReq();
  
  AddChunkReq(const AddChunkReq& from);
  
  inline AddChunkReq& operator=(const AddChunkReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddChunkReq& default_instance();
  
  void Swap(AddChunkReq* other);
  
  // implements Message ----------------------------------------------
  
  AddChunkReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddChunkReq& from);
  void MergeFrom(const AddChunkReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 chunkId = 1;
  inline bool has_chunkid() const;
  inline void clear_chunkid();
  static const int kChunkIdFieldNumber = 1;
  inline ::google::protobuf::int64 chunkid() const;
  inline void set_chunkid(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:myfs.AddChunkReq)
 private:
  inline void set_has_chunkid();
  inline void clear_has_chunkid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 chunkid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static AddChunkReq* default_instance_;
};
// -------------------------------------------------------------------

class AddChunkRep : public ::google::protobuf::Message {
 public:
  AddChunkRep();
  virtual ~AddChunkRep();
  
  AddChunkRep(const AddChunkRep& from);
  
  inline AddChunkRep& operator=(const AddChunkRep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddChunkRep& default_instance();
  
  void Swap(AddChunkRep* other);
  
  // implements Message ----------------------------------------------
  
  AddChunkRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddChunkRep& from);
  void MergeFrom(const AddChunkRep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 returnVal = 1;
  inline bool has_returnval() const;
  inline void clear_returnval();
  static const int kReturnValFieldNumber = 1;
  inline ::google::protobuf::int32 returnval() const;
  inline void set_returnval(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.AddChunkRep)
 private:
  inline void set_has_returnval();
  inline void clear_has_returnval();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 returnval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static AddChunkRep* default_instance_;
};
// -------------------------------------------------------------------

class DelChunkReq : public ::google::protobuf::Message {
 public:
  DelChunkReq();
  virtual ~DelChunkReq();
  
  DelChunkReq(const DelChunkReq& from);
  
  inline DelChunkReq& operator=(const DelChunkReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelChunkReq& default_instance();
  
  void Swap(DelChunkReq* other);
  
  // implements Message ----------------------------------------------
  
  DelChunkReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelChunkReq& from);
  void MergeFrom(const DelChunkReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 chunkId = 1;
  inline bool has_chunkid() const;
  inline void clear_chunkid();
  static const int kChunkIdFieldNumber = 1;
  inline ::google::protobuf::int64 chunkid() const;
  inline void set_chunkid(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:myfs.DelChunkReq)
 private:
  inline void set_has_chunkid();
  inline void clear_has_chunkid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 chunkid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static DelChunkReq* default_instance_;
};
// -------------------------------------------------------------------

class DelChunkRep : public ::google::protobuf::Message {
 public:
  DelChunkRep();
  virtual ~DelChunkRep();
  
  DelChunkRep(const DelChunkRep& from);
  
  inline DelChunkRep& operator=(const DelChunkRep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelChunkRep& default_instance();
  
  void Swap(DelChunkRep* other);
  
  // implements Message ----------------------------------------------
  
  DelChunkRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelChunkRep& from);
  void MergeFrom(const DelChunkRep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 returnVal = 1;
  inline bool has_returnval() const;
  inline void clear_returnval();
  static const int kReturnValFieldNumber = 1;
  inline ::google::protobuf::int32 returnval() const;
  inline void set_returnval(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.DelChunkRep)
 private:
  inline void set_has_returnval();
  inline void clear_has_returnval();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 returnval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static DelChunkRep* default_instance_;
};
// -------------------------------------------------------------------

class WriteDataReq_CSAddr : public ::google::protobuf::Message {
 public:
  WriteDataReq_CSAddr();
  virtual ~WriteDataReq_CSAddr();
  
  WriteDataReq_CSAddr(const WriteDataReq_CSAddr& from);
  
  inline WriteDataReq_CSAddr& operator=(const WriteDataReq_CSAddr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteDataReq_CSAddr& default_instance();
  
  void Swap(WriteDataReq_CSAddr* other);
  
  // implements Message ----------------------------------------------
  
  WriteDataReq_CSAddr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteDataReq_CSAddr& from);
  void MergeFrom(const WriteDataReq_CSAddr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string ipAddr = 1;
  inline bool has_ipaddr() const;
  inline void clear_ipaddr();
  static const int kIpAddrFieldNumber = 1;
  inline const ::std::string& ipaddr() const;
  inline void set_ipaddr(const ::std::string& value);
  inline void set_ipaddr(const char* value);
  inline void set_ipaddr(const char* value, size_t size);
  inline ::std::string* mutable_ipaddr();
  inline ::std::string* release_ipaddr();
  
  // required int32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.WriteDataReq.CSAddr)
 private:
  inline void set_has_ipaddr();
  inline void clear_has_ipaddr();
  inline void set_has_port();
  inline void clear_has_port();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* ipaddr_;
  ::google::protobuf::int32 port_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static WriteDataReq_CSAddr* default_instance_;
};
// -------------------------------------------------------------------

class WriteDataReq : public ::google::protobuf::Message {
 public:
  WriteDataReq();
  virtual ~WriteDataReq();
  
  WriteDataReq(const WriteDataReq& from);
  
  inline WriteDataReq& operator=(const WriteDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteDataReq& default_instance();
  
  void Swap(WriteDataReq* other);
  
  // implements Message ----------------------------------------------
  
  WriteDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteDataReq& from);
  void MergeFrom(const WriteDataReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef WriteDataReq_CSAddr CSAddr;
  
  // accessors -------------------------------------------------------
  
  // repeated .myfs.WriteDataReq.CSAddr serverAddrs = 1;
  inline int serveraddrs_size() const;
  inline void clear_serveraddrs();
  static const int kServerAddrsFieldNumber = 1;
  inline const ::myfs::WriteDataReq_CSAddr& serveraddrs(int index) const;
  inline ::myfs::WriteDataReq_CSAddr* mutable_serveraddrs(int index);
  inline ::myfs::WriteDataReq_CSAddr* add_serveraddrs();
  inline const ::google::protobuf::RepeatedPtrField< ::myfs::WriteDataReq_CSAddr >&
      serveraddrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::myfs::WriteDataReq_CSAddr >*
      mutable_serveraddrs();
  
  // required int64 chunkId = 2;
  inline bool has_chunkid() const;
  inline void clear_chunkid();
  static const int kChunkIdFieldNumber = 2;
  inline ::google::protobuf::int64 chunkid() const;
  inline void set_chunkid(::google::protobuf::int64 value);
  
  // required int32 cacheId = 3;
  inline bool has_cacheid() const;
  inline void clear_cacheid();
  static const int kCacheIdFieldNumber = 3;
  inline ::google::protobuf::int32 cacheid() const;
  inline void set_cacheid(::google::protobuf::int32 value);
  
  // required bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  
  // @@protoc_insertion_point(class_scope:myfs.WriteDataReq)
 private:
  inline void set_has_chunkid();
  inline void clear_has_chunkid();
  inline void set_has_cacheid();
  inline void clear_has_cacheid();
  inline void set_has_data();
  inline void clear_has_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::myfs::WriteDataReq_CSAddr > serveraddrs_;
  ::google::protobuf::int64 chunkid_;
  ::std::string* data_;
  ::google::protobuf::int32 cacheid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static WriteDataReq* default_instance_;
};
// -------------------------------------------------------------------

class WriteDataRep : public ::google::protobuf::Message {
 public:
  WriteDataRep();
  virtual ~WriteDataRep();
  
  WriteDataRep(const WriteDataRep& from);
  
  inline WriteDataRep& operator=(const WriteDataRep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteDataRep& default_instance();
  
  void Swap(WriteDataRep* other);
  
  // implements Message ----------------------------------------------
  
  WriteDataRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteDataRep& from);
  void MergeFrom(const WriteDataRep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 returnVal = 1;
  inline bool has_returnval() const;
  inline void clear_returnval();
  static const int kReturnValFieldNumber = 1;
  inline ::google::protobuf::int32 returnval() const;
  inline void set_returnval(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.WriteDataRep)
 private:
  inline void set_has_returnval();
  inline void clear_has_returnval();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 returnval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static WriteDataRep* default_instance_;
};
// -------------------------------------------------------------------

class WriteReq_CSAddr : public ::google::protobuf::Message {
 public:
  WriteReq_CSAddr();
  virtual ~WriteReq_CSAddr();
  
  WriteReq_CSAddr(const WriteReq_CSAddr& from);
  
  inline WriteReq_CSAddr& operator=(const WriteReq_CSAddr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteReq_CSAddr& default_instance();
  
  void Swap(WriteReq_CSAddr* other);
  
  // implements Message ----------------------------------------------
  
  WriteReq_CSAddr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteReq_CSAddr& from);
  void MergeFrom(const WriteReq_CSAddr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string ipAddr = 1;
  inline bool has_ipaddr() const;
  inline void clear_ipaddr();
  static const int kIpAddrFieldNumber = 1;
  inline const ::std::string& ipaddr() const;
  inline void set_ipaddr(const ::std::string& value);
  inline void set_ipaddr(const char* value);
  inline void set_ipaddr(const char* value, size_t size);
  inline ::std::string* mutable_ipaddr();
  inline ::std::string* release_ipaddr();
  
  // required int32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.WriteReq.CSAddr)
 private:
  inline void set_has_ipaddr();
  inline void clear_has_ipaddr();
  inline void set_has_port();
  inline void clear_has_port();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* ipaddr_;
  ::google::protobuf::int32 port_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static WriteReq_CSAddr* default_instance_;
};
// -------------------------------------------------------------------

class WriteReq : public ::google::protobuf::Message {
 public:
  WriteReq();
  virtual ~WriteReq();
  
  WriteReq(const WriteReq& from);
  
  inline WriteReq& operator=(const WriteReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteReq& default_instance();
  
  void Swap(WriteReq* other);
  
  // implements Message ----------------------------------------------
  
  WriteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteReq& from);
  void MergeFrom(const WriteReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef WriteReq_CSAddr CSAddr;
  
  // accessors -------------------------------------------------------
  
  // repeated .myfs.WriteReq.CSAddr serverAddrs = 1;
  inline int serveraddrs_size() const;
  inline void clear_serveraddrs();
  static const int kServerAddrsFieldNumber = 1;
  inline const ::myfs::WriteReq_CSAddr& serveraddrs(int index) const;
  inline ::myfs::WriteReq_CSAddr* mutable_serveraddrs(int index);
  inline ::myfs::WriteReq_CSAddr* add_serveraddrs();
  inline const ::google::protobuf::RepeatedPtrField< ::myfs::WriteReq_CSAddr >&
      serveraddrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::myfs::WriteReq_CSAddr >*
      mutable_serveraddrs();
  
  // required int64 chunkId = 2;
  inline bool has_chunkid() const;
  inline void clear_chunkid();
  static const int kChunkIdFieldNumber = 2;
  inline ::google::protobuf::int64 chunkid() const;
  inline void set_chunkid(::google::protobuf::int64 value);
  
  // required int32 cacheId = 3;
  inline bool has_cacheid() const;
  inline void clear_cacheid();
  static const int kCacheIdFieldNumber = 3;
  inline ::google::protobuf::int32 cacheid() const;
  inline void set_cacheid(::google::protobuf::int32 value);
  
  // required int32 offset = 4;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 4;
  inline ::google::protobuf::int32 offset() const;
  inline void set_offset(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.WriteReq)
 private:
  inline void set_has_chunkid();
  inline void clear_has_chunkid();
  inline void set_has_cacheid();
  inline void clear_has_cacheid();
  inline void set_has_offset();
  inline void clear_has_offset();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::myfs::WriteReq_CSAddr > serveraddrs_;
  ::google::protobuf::int64 chunkid_;
  ::google::protobuf::int32 cacheid_;
  ::google::protobuf::int32 offset_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static WriteReq* default_instance_;
};
// -------------------------------------------------------------------

class WriteRep : public ::google::protobuf::Message {
 public:
  WriteRep();
  virtual ~WriteRep();
  
  WriteRep(const WriteRep& from);
  
  inline WriteRep& operator=(const WriteRep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteRep& default_instance();
  
  void Swap(WriteRep* other);
  
  // implements Message ----------------------------------------------
  
  WriteRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteRep& from);
  void MergeFrom(const WriteRep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 returnVal = 1;
  inline bool has_returnval() const;
  inline void clear_returnval();
  static const int kReturnValFieldNumber = 1;
  inline ::google::protobuf::int32 returnval() const;
  inline void set_returnval(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.WriteRep)
 private:
  inline void set_has_returnval();
  inline void clear_has_returnval();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 returnval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static WriteRep* default_instance_;
};
// -------------------------------------------------------------------

class ReadReq : public ::google::protobuf::Message {
 public:
  ReadReq();
  virtual ~ReadReq();
  
  ReadReq(const ReadReq& from);
  
  inline ReadReq& operator=(const ReadReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadReq& default_instance();
  
  void Swap(ReadReq* other);
  
  // implements Message ----------------------------------------------
  
  ReadReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadReq& from);
  void MergeFrom(const ReadReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 chunkId = 1;
  inline bool has_chunkid() const;
  inline void clear_chunkid();
  static const int kChunkIdFieldNumber = 1;
  inline ::google::protobuf::int64 chunkid() const;
  inline void set_chunkid(::google::protobuf::int64 value);
  
  // required int32 offset = 2;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 2;
  inline ::google::protobuf::int32 offset() const;
  inline void set_offset(::google::protobuf::int32 value);
  
  // required int32 length = 3;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 3;
  inline ::google::protobuf::int32 length() const;
  inline void set_length(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:myfs.ReadReq)
 private:
  inline void set_has_chunkid();
  inline void clear_has_chunkid();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_length();
  inline void clear_has_length();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 chunkid_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::int32 length_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static ReadReq* default_instance_;
};
// -------------------------------------------------------------------

class ReadRep : public ::google::protobuf::Message {
 public:
  ReadRep();
  virtual ~ReadRep();
  
  ReadRep(const ReadRep& from);
  
  inline ReadRep& operator=(const ReadRep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadRep& default_instance();
  
  void Swap(ReadRep* other);
  
  // implements Message ----------------------------------------------
  
  ReadRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadRep& from);
  void MergeFrom(const ReadRep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 returnVal = 1;
  inline bool has_returnval() const;
  inline void clear_returnval();
  static const int kReturnValFieldNumber = 1;
  inline ::google::protobuf::int32 returnval() const;
  inline void set_returnval(::google::protobuf::int32 value);
  
  // required string data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const char* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  
  // @@protoc_insertion_point(class_scope:myfs.ReadRep)
 private:
  inline void set_has_returnval();
  inline void clear_has_returnval();
  inline void set_has_data();
  inline void clear_has_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* data_;
  ::google::protobuf::int32 returnval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FileSystem_2eproto();
  friend void protobuf_AssignDesc_FileSystem_2eproto();
  friend void protobuf_ShutdownFile_FileSystem_2eproto();
  
  void InitAsDefaultInstance();
  static ReadRep* default_instance_;
};
// ===================================================================


// ===================================================================

// GetAttrReq

// required string path = 1;
inline bool GetAttrReq::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAttrReq::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAttrReq::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAttrReq::clear_path() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& GetAttrReq::path() const {
  return *path_;
}
inline void GetAttrReq::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void GetAttrReq::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void GetAttrReq::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetAttrReq::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  return path_;
}
inline ::std::string* GetAttrReq::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// GetAttrRep_Stat

// required int32 mode = 1;
inline bool GetAttrRep_Stat::has_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAttrRep_Stat::set_has_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAttrRep_Stat::clear_has_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAttrRep_Stat::clear_mode() {
  mode_ = 0;
  clear_has_mode();
}
inline ::google::protobuf::int32 GetAttrRep_Stat::mode() const {
  return mode_;
}
inline void GetAttrRep_Stat::set_mode(::google::protobuf::int32 value) {
  set_has_mode();
  mode_ = value;
}

// required int32 uid = 2;
inline bool GetAttrRep_Stat::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAttrRep_Stat::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAttrRep_Stat::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAttrRep_Stat::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 GetAttrRep_Stat::uid() const {
  return uid_;
}
inline void GetAttrRep_Stat::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
}

// required int32 gid = 3;
inline bool GetAttrRep_Stat::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAttrRep_Stat::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAttrRep_Stat::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAttrRep_Stat::clear_gid() {
  gid_ = 0;
  clear_has_gid();
}
inline ::google::protobuf::int32 GetAttrRep_Stat::gid() const {
  return gid_;
}
inline void GetAttrRep_Stat::set_gid(::google::protobuf::int32 value) {
  set_has_gid();
  gid_ = value;
}

// required int32 size = 4;
inline bool GetAttrRep_Stat::has_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetAttrRep_Stat::set_has_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetAttrRep_Stat::clear_has_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetAttrRep_Stat::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 GetAttrRep_Stat::size() const {
  return size_;
}
inline void GetAttrRep_Stat::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
}

// required int32 atime = 5;
inline bool GetAttrRep_Stat::has_atime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetAttrRep_Stat::set_has_atime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetAttrRep_Stat::clear_has_atime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetAttrRep_Stat::clear_atime() {
  atime_ = 0;
  clear_has_atime();
}
inline ::google::protobuf::int32 GetAttrRep_Stat::atime() const {
  return atime_;
}
inline void GetAttrRep_Stat::set_atime(::google::protobuf::int32 value) {
  set_has_atime();
  atime_ = value;
}

// required int32 mtime = 6;
inline bool GetAttrRep_Stat::has_mtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetAttrRep_Stat::set_has_mtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetAttrRep_Stat::clear_has_mtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetAttrRep_Stat::clear_mtime() {
  mtime_ = 0;
  clear_has_mtime();
}
inline ::google::protobuf::int32 GetAttrRep_Stat::mtime() const {
  return mtime_;
}
inline void GetAttrRep_Stat::set_mtime(::google::protobuf::int32 value) {
  set_has_mtime();
  mtime_ = value;
}

// required int32 ctime = 7;
inline bool GetAttrRep_Stat::has_ctime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetAttrRep_Stat::set_has_ctime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetAttrRep_Stat::clear_has_ctime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetAttrRep_Stat::clear_ctime() {
  ctime_ = 0;
  clear_has_ctime();
}
inline ::google::protobuf::int32 GetAttrRep_Stat::ctime() const {
  return ctime_;
}
inline void GetAttrRep_Stat::set_ctime(::google::protobuf::int32 value) {
  set_has_ctime();
  ctime_ = value;
}

// -------------------------------------------------------------------

// GetAttrRep

// required .myfs.GetAttrRep.Stat st = 1;
inline bool GetAttrRep::has_st() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAttrRep::set_has_st() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAttrRep::clear_has_st() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAttrRep::clear_st() {
  if (st_ != NULL) st_->::myfs::GetAttrRep_Stat::Clear();
  clear_has_st();
}
inline const ::myfs::GetAttrRep_Stat& GetAttrRep::st() const {
  return st_ != NULL ? *st_ : *default_instance_->st_;
}
inline ::myfs::GetAttrRep_Stat* GetAttrRep::mutable_st() {
  set_has_st();
  if (st_ == NULL) st_ = new ::myfs::GetAttrRep_Stat;
  return st_;
}
inline ::myfs::GetAttrRep_Stat* GetAttrRep::release_st() {
  clear_has_st();
  ::myfs::GetAttrRep_Stat* temp = st_;
  st_ = NULL;
  return temp;
}

// required int32 returnVal = 2;
inline bool GetAttrRep::has_returnval() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAttrRep::set_has_returnval() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAttrRep::clear_has_returnval() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAttrRep::clear_returnval() {
  returnval_ = 0;
  clear_has_returnval();
}
inline ::google::protobuf::int32 GetAttrRep::returnval() const {
  return returnval_;
}
inline void GetAttrRep::set_returnval(::google::protobuf::int32 value) {
  set_has_returnval();
  returnval_ = value;
}

// -------------------------------------------------------------------

// ReadDirReq

// required string path = 1;
inline bool ReadDirReq::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadDirReq::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadDirReq::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadDirReq::clear_path() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& ReadDirReq::path() const {
  return *path_;
}
inline void ReadDirReq::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void ReadDirReq::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void ReadDirReq::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReadDirReq::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  return path_;
}
inline ::std::string* ReadDirReq::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReadDirRep_DirEnt

// required string name = 1;
inline bool ReadDirRep_DirEnt::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadDirRep_DirEnt::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadDirRep_DirEnt::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadDirRep_DirEnt::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ReadDirRep_DirEnt::name() const {
  return *name_;
}
inline void ReadDirRep_DirEnt::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ReadDirRep_DirEnt::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ReadDirRep_DirEnt::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReadDirRep_DirEnt::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ReadDirRep_DirEnt::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 type = 2;
inline bool ReadDirRep_DirEnt::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadDirRep_DirEnt::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadDirRep_DirEnt::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadDirRep_DirEnt::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReadDirRep_DirEnt::type() const {
  return type_;
}
inline void ReadDirRep_DirEnt::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ReadDirRep

// repeated .myfs.ReadDirRep.DirEnt dirEnts = 1;
inline int ReadDirRep::dirents_size() const {
  return dirents_.size();
}
inline void ReadDirRep::clear_dirents() {
  dirents_.Clear();
}
inline const ::myfs::ReadDirRep_DirEnt& ReadDirRep::dirents(int index) const {
  return dirents_.Get(index);
}
inline ::myfs::ReadDirRep_DirEnt* ReadDirRep::mutable_dirents(int index) {
  return dirents_.Mutable(index);
}
inline ::myfs::ReadDirRep_DirEnt* ReadDirRep::add_dirents() {
  return dirents_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::myfs::ReadDirRep_DirEnt >&
ReadDirRep::dirents() const {
  return dirents_;
}
inline ::google::protobuf::RepeatedPtrField< ::myfs::ReadDirRep_DirEnt >*
ReadDirRep::mutable_dirents() {
  return &dirents_;
}

// required int32 returnVal = 2;
inline bool ReadDirRep::has_returnval() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadDirRep::set_has_returnval() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadDirRep::clear_has_returnval() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadDirRep::clear_returnval() {
  returnval_ = 0;
  clear_has_returnval();
}
inline ::google::protobuf::int32 ReadDirRep::returnval() const {
  return returnval_;
}
inline void ReadDirRep::set_returnval(::google::protobuf::int32 value) {
  set_has_returnval();
  returnval_ = value;
}

// -------------------------------------------------------------------

// MkNodReq

// required string path = 1;
inline bool MkNodReq::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MkNodReq::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MkNodReq::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MkNodReq::clear_path() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& MkNodReq::path() const {
  return *path_;
}
inline void MkNodReq::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void MkNodReq::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void MkNodReq::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MkNodReq::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  return path_;
}
inline ::std::string* MkNodReq::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 mode = 2;
inline bool MkNodReq::has_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MkNodReq::set_has_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MkNodReq::clear_has_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MkNodReq::clear_mode() {
  mode_ = 0;
  clear_has_mode();
}
inline ::google::protobuf::int32 MkNodReq::mode() const {
  return mode_;
}
inline void MkNodReq::set_mode(::google::protobuf::int32 value) {
  set_has_mode();
  mode_ = value;
}

// -------------------------------------------------------------------

// MkNodRep

// required int32 returnVal = 1;
inline bool MkNodRep::has_returnval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MkNodRep::set_has_returnval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MkNodRep::clear_has_returnval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MkNodRep::clear_returnval() {
  returnval_ = 0;
  clear_has_returnval();
}
inline ::google::protobuf::int32 MkNodRep::returnval() const {
  return returnval_;
}
inline void MkNodRep::set_returnval(::google::protobuf::int32 value) {
  set_has_returnval();
  returnval_ = value;
}

// -------------------------------------------------------------------

// MkDirReq

// required string path = 1;
inline bool MkDirReq::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MkDirReq::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MkDirReq::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MkDirReq::clear_path() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& MkDirReq::path() const {
  return *path_;
}
inline void MkDirReq::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void MkDirReq::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void MkDirReq::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MkDirReq::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  return path_;
}
inline ::std::string* MkDirReq::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 mode = 2;
inline bool MkDirReq::has_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MkDirReq::set_has_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MkDirReq::clear_has_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MkDirReq::clear_mode() {
  mode_ = 0;
  clear_has_mode();
}
inline ::google::protobuf::int32 MkDirReq::mode() const {
  return mode_;
}
inline void MkDirReq::set_mode(::google::protobuf::int32 value) {
  set_has_mode();
  mode_ = value;
}

// -------------------------------------------------------------------

// MkDirRep

// required int32 returnVal = 1;
inline bool MkDirRep::has_returnval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MkDirRep::set_has_returnval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MkDirRep::clear_has_returnval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MkDirRep::clear_returnval() {
  returnval_ = 0;
  clear_has_returnval();
}
inline ::google::protobuf::int32 MkDirRep::returnval() const {
  return returnval_;
}
inline void MkDirRep::set_returnval(::google::protobuf::int32 value) {
  set_has_returnval();
  returnval_ = value;
}

// -------------------------------------------------------------------

// UnlinkReq

// required string path = 1;
inline bool UnlinkReq::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnlinkReq::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnlinkReq::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnlinkReq::clear_path() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& UnlinkReq::path() const {
  return *path_;
}
inline void UnlinkReq::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void UnlinkReq::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void UnlinkReq::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UnlinkReq::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  return path_;
}
inline ::std::string* UnlinkReq::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// UnlinkRep

// required int32 returnVal = 1;
inline bool UnlinkRep::has_returnval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnlinkRep::set_has_returnval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnlinkRep::clear_has_returnval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnlinkRep::clear_returnval() {
  returnval_ = 0;
  clear_has_returnval();
}
inline ::google::protobuf::int32 UnlinkRep::returnval() const {
  return returnval_;
}
inline void UnlinkRep::set_returnval(::google::protobuf::int32 value) {
  set_has_returnval();
  returnval_ = value;
}

// -------------------------------------------------------------------

// RmDirReq

// required string path = 1;
inline bool RmDirReq::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RmDirReq::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RmDirReq::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RmDirReq::clear_path() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& RmDirReq::path() const {
  return *path_;
}
inline void RmDirReq::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void RmDirReq::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void RmDirReq::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RmDirReq::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  return path_;
}
inline ::std::string* RmDirReq::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// RmDirRep

// required int32 returnVal = 1;
inline bool RmDirRep::has_returnval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RmDirRep::set_has_returnval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RmDirRep::clear_has_returnval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RmDirRep::clear_returnval() {
  returnval_ = 0;
  clear_has_returnval();
}
inline ::google::protobuf::int32 RmDirRep::returnval() const {
  return returnval_;
}
inline void RmDirRep::set_returnval(::google::protobuf::int32 value) {
  set_has_returnval();
  returnval_ = value;
}

// -------------------------------------------------------------------

// RenameReq

// required string from = 1;
inline bool RenameReq::has_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RenameReq::set_has_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RenameReq::clear_has_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RenameReq::clear_from() {
  if (from_ != &::google::protobuf::internal::kEmptyString) {
    from_->clear();
  }
  clear_has_from();
}
inline const ::std::string& RenameReq::from() const {
  return *from_;
}
inline void RenameReq::set_from(const ::std::string& value) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void RenameReq::set_from(const char* value) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void RenameReq::set_from(const char* value, size_t size) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RenameReq::mutable_from() {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  return from_;
}
inline ::std::string* RenameReq::release_from() {
  clear_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = from_;
    from_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string to = 2;
inline bool RenameReq::has_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RenameReq::set_has_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RenameReq::clear_has_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RenameReq::clear_to() {
  if (to_ != &::google::protobuf::internal::kEmptyString) {
    to_->clear();
  }
  clear_has_to();
}
inline const ::std::string& RenameReq::to() const {
  return *to_;
}
inline void RenameReq::set_to(const ::std::string& value) {
  set_has_to();
  if (to_ == &::google::protobuf::internal::kEmptyString) {
    to_ = new ::std::string;
  }
  to_->assign(value);
}
inline void RenameReq::set_to(const char* value) {
  set_has_to();
  if (to_ == &::google::protobuf::internal::kEmptyString) {
    to_ = new ::std::string;
  }
  to_->assign(value);
}
inline void RenameReq::set_to(const char* value, size_t size) {
  set_has_to();
  if (to_ == &::google::protobuf::internal::kEmptyString) {
    to_ = new ::std::string;
  }
  to_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RenameReq::mutable_to() {
  set_has_to();
  if (to_ == &::google::protobuf::internal::kEmptyString) {
    to_ = new ::std::string;
  }
  return to_;
}
inline ::std::string* RenameReq::release_to() {
  clear_has_to();
  if (to_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = to_;
    to_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// RenameRep

// required int32 returnVal = 1;
inline bool RenameRep::has_returnval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RenameRep::set_has_returnval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RenameRep::clear_has_returnval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RenameRep::clear_returnval() {
  returnval_ = 0;
  clear_has_returnval();
}
inline ::google::protobuf::int32 RenameRep::returnval() const {
  return returnval_;
}
inline void RenameRep::set_returnval(::google::protobuf::int32 value) {
  set_has_returnval();
  returnval_ = value;
}

// -------------------------------------------------------------------

// SearchDirReq

// required string path = 1;
inline bool SearchDirReq::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchDirReq::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchDirReq::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchDirReq::clear_path() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& SearchDirReq::path() const {
  return *path_;
}
inline void SearchDirReq::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void SearchDirReq::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void SearchDirReq::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SearchDirReq::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  return path_;
}
inline ::std::string* SearchDirReq::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// SearchDirRep

// required int32 returnVal = 1;
inline bool SearchDirRep::has_returnval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchDirRep::set_has_returnval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchDirRep::clear_has_returnval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchDirRep::clear_returnval() {
  returnval_ = 0;
  clear_has_returnval();
}
inline ::google::protobuf::int32 SearchDirRep::returnval() const {
  return returnval_;
}
inline void SearchDirRep::set_returnval(::google::protobuf::int32 value) {
  set_has_returnval();
  returnval_ = value;
}

// -------------------------------------------------------------------

// AddChunkReq

// required int64 chunkId = 1;
inline bool AddChunkReq::has_chunkid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddChunkReq::set_has_chunkid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddChunkReq::clear_has_chunkid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddChunkReq::clear_chunkid() {
  chunkid_ = GOOGLE_LONGLONG(0);
  clear_has_chunkid();
}
inline ::google::protobuf::int64 AddChunkReq::chunkid() const {
  return chunkid_;
}
inline void AddChunkReq::set_chunkid(::google::protobuf::int64 value) {
  set_has_chunkid();
  chunkid_ = value;
}

// -------------------------------------------------------------------

// AddChunkRep

// required int32 returnVal = 1;
inline bool AddChunkRep::has_returnval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddChunkRep::set_has_returnval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddChunkRep::clear_has_returnval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddChunkRep::clear_returnval() {
  returnval_ = 0;
  clear_has_returnval();
}
inline ::google::protobuf::int32 AddChunkRep::returnval() const {
  return returnval_;
}
inline void AddChunkRep::set_returnval(::google::protobuf::int32 value) {
  set_has_returnval();
  returnval_ = value;
}

// -------------------------------------------------------------------

// DelChunkReq

// required int64 chunkId = 1;
inline bool DelChunkReq::has_chunkid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelChunkReq::set_has_chunkid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelChunkReq::clear_has_chunkid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelChunkReq::clear_chunkid() {
  chunkid_ = GOOGLE_LONGLONG(0);
  clear_has_chunkid();
}
inline ::google::protobuf::int64 DelChunkReq::chunkid() const {
  return chunkid_;
}
inline void DelChunkReq::set_chunkid(::google::protobuf::int64 value) {
  set_has_chunkid();
  chunkid_ = value;
}

// -------------------------------------------------------------------

// DelChunkRep

// required int32 returnVal = 1;
inline bool DelChunkRep::has_returnval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelChunkRep::set_has_returnval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelChunkRep::clear_has_returnval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelChunkRep::clear_returnval() {
  returnval_ = 0;
  clear_has_returnval();
}
inline ::google::protobuf::int32 DelChunkRep::returnval() const {
  return returnval_;
}
inline void DelChunkRep::set_returnval(::google::protobuf::int32 value) {
  set_has_returnval();
  returnval_ = value;
}

// -------------------------------------------------------------------

// WriteDataReq_CSAddr

// required string ipAddr = 1;
inline bool WriteDataReq_CSAddr::has_ipaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteDataReq_CSAddr::set_has_ipaddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteDataReq_CSAddr::clear_has_ipaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteDataReq_CSAddr::clear_ipaddr() {
  if (ipaddr_ != &::google::protobuf::internal::kEmptyString) {
    ipaddr_->clear();
  }
  clear_has_ipaddr();
}
inline const ::std::string& WriteDataReq_CSAddr::ipaddr() const {
  return *ipaddr_;
}
inline void WriteDataReq_CSAddr::set_ipaddr(const ::std::string& value) {
  set_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    ipaddr_ = new ::std::string;
  }
  ipaddr_->assign(value);
}
inline void WriteDataReq_CSAddr::set_ipaddr(const char* value) {
  set_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    ipaddr_ = new ::std::string;
  }
  ipaddr_->assign(value);
}
inline void WriteDataReq_CSAddr::set_ipaddr(const char* value, size_t size) {
  set_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    ipaddr_ = new ::std::string;
  }
  ipaddr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WriteDataReq_CSAddr::mutable_ipaddr() {
  set_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    ipaddr_ = new ::std::string;
  }
  return ipaddr_;
}
inline ::std::string* WriteDataReq_CSAddr::release_ipaddr() {
  clear_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ipaddr_;
    ipaddr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 port = 2;
inline bool WriteDataReq_CSAddr::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteDataReq_CSAddr::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WriteDataReq_CSAddr::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WriteDataReq_CSAddr::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 WriteDataReq_CSAddr::port() const {
  return port_;
}
inline void WriteDataReq_CSAddr::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
}

// -------------------------------------------------------------------

// WriteDataReq

// repeated .myfs.WriteDataReq.CSAddr serverAddrs = 1;
inline int WriteDataReq::serveraddrs_size() const {
  return serveraddrs_.size();
}
inline void WriteDataReq::clear_serveraddrs() {
  serveraddrs_.Clear();
}
inline const ::myfs::WriteDataReq_CSAddr& WriteDataReq::serveraddrs(int index) const {
  return serveraddrs_.Get(index);
}
inline ::myfs::WriteDataReq_CSAddr* WriteDataReq::mutable_serveraddrs(int index) {
  return serveraddrs_.Mutable(index);
}
inline ::myfs::WriteDataReq_CSAddr* WriteDataReq::add_serveraddrs() {
  return serveraddrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::myfs::WriteDataReq_CSAddr >&
WriteDataReq::serveraddrs() const {
  return serveraddrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::myfs::WriteDataReq_CSAddr >*
WriteDataReq::mutable_serveraddrs() {
  return &serveraddrs_;
}

// required int64 chunkId = 2;
inline bool WriteDataReq::has_chunkid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteDataReq::set_has_chunkid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WriteDataReq::clear_has_chunkid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WriteDataReq::clear_chunkid() {
  chunkid_ = GOOGLE_LONGLONG(0);
  clear_has_chunkid();
}
inline ::google::protobuf::int64 WriteDataReq::chunkid() const {
  return chunkid_;
}
inline void WriteDataReq::set_chunkid(::google::protobuf::int64 value) {
  set_has_chunkid();
  chunkid_ = value;
}

// required int32 cacheId = 3;
inline bool WriteDataReq::has_cacheid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WriteDataReq::set_has_cacheid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WriteDataReq::clear_has_cacheid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WriteDataReq::clear_cacheid() {
  cacheid_ = 0;
  clear_has_cacheid();
}
inline ::google::protobuf::int32 WriteDataReq::cacheid() const {
  return cacheid_;
}
inline void WriteDataReq::set_cacheid(::google::protobuf::int32 value) {
  set_has_cacheid();
  cacheid_ = value;
}

// required bytes data = 4;
inline bool WriteDataReq::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WriteDataReq::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WriteDataReq::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WriteDataReq::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& WriteDataReq::data() const {
  return *data_;
}
inline void WriteDataReq::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void WriteDataReq::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void WriteDataReq::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WriteDataReq::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* WriteDataReq::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// WriteDataRep

// required int32 returnVal = 1;
inline bool WriteDataRep::has_returnval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteDataRep::set_has_returnval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteDataRep::clear_has_returnval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteDataRep::clear_returnval() {
  returnval_ = 0;
  clear_has_returnval();
}
inline ::google::protobuf::int32 WriteDataRep::returnval() const {
  return returnval_;
}
inline void WriteDataRep::set_returnval(::google::protobuf::int32 value) {
  set_has_returnval();
  returnval_ = value;
}

// -------------------------------------------------------------------

// WriteReq_CSAddr

// required string ipAddr = 1;
inline bool WriteReq_CSAddr::has_ipaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteReq_CSAddr::set_has_ipaddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteReq_CSAddr::clear_has_ipaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteReq_CSAddr::clear_ipaddr() {
  if (ipaddr_ != &::google::protobuf::internal::kEmptyString) {
    ipaddr_->clear();
  }
  clear_has_ipaddr();
}
inline const ::std::string& WriteReq_CSAddr::ipaddr() const {
  return *ipaddr_;
}
inline void WriteReq_CSAddr::set_ipaddr(const ::std::string& value) {
  set_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    ipaddr_ = new ::std::string;
  }
  ipaddr_->assign(value);
}
inline void WriteReq_CSAddr::set_ipaddr(const char* value) {
  set_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    ipaddr_ = new ::std::string;
  }
  ipaddr_->assign(value);
}
inline void WriteReq_CSAddr::set_ipaddr(const char* value, size_t size) {
  set_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    ipaddr_ = new ::std::string;
  }
  ipaddr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WriteReq_CSAddr::mutable_ipaddr() {
  set_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    ipaddr_ = new ::std::string;
  }
  return ipaddr_;
}
inline ::std::string* WriteReq_CSAddr::release_ipaddr() {
  clear_has_ipaddr();
  if (ipaddr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ipaddr_;
    ipaddr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 port = 2;
inline bool WriteReq_CSAddr::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteReq_CSAddr::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WriteReq_CSAddr::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WriteReq_CSAddr::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 WriteReq_CSAddr::port() const {
  return port_;
}
inline void WriteReq_CSAddr::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
}

// -------------------------------------------------------------------

// WriteReq

// repeated .myfs.WriteReq.CSAddr serverAddrs = 1;
inline int WriteReq::serveraddrs_size() const {
  return serveraddrs_.size();
}
inline void WriteReq::clear_serveraddrs() {
  serveraddrs_.Clear();
}
inline const ::myfs::WriteReq_CSAddr& WriteReq::serveraddrs(int index) const {
  return serveraddrs_.Get(index);
}
inline ::myfs::WriteReq_CSAddr* WriteReq::mutable_serveraddrs(int index) {
  return serveraddrs_.Mutable(index);
}
inline ::myfs::WriteReq_CSAddr* WriteReq::add_serveraddrs() {
  return serveraddrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::myfs::WriteReq_CSAddr >&
WriteReq::serveraddrs() const {
  return serveraddrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::myfs::WriteReq_CSAddr >*
WriteReq::mutable_serveraddrs() {
  return &serveraddrs_;
}

// required int64 chunkId = 2;
inline bool WriteReq::has_chunkid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteReq::set_has_chunkid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WriteReq::clear_has_chunkid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WriteReq::clear_chunkid() {
  chunkid_ = GOOGLE_LONGLONG(0);
  clear_has_chunkid();
}
inline ::google::protobuf::int64 WriteReq::chunkid() const {
  return chunkid_;
}
inline void WriteReq::set_chunkid(::google::protobuf::int64 value) {
  set_has_chunkid();
  chunkid_ = value;
}

// required int32 cacheId = 3;
inline bool WriteReq::has_cacheid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WriteReq::set_has_cacheid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WriteReq::clear_has_cacheid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WriteReq::clear_cacheid() {
  cacheid_ = 0;
  clear_has_cacheid();
}
inline ::google::protobuf::int32 WriteReq::cacheid() const {
  return cacheid_;
}
inline void WriteReq::set_cacheid(::google::protobuf::int32 value) {
  set_has_cacheid();
  cacheid_ = value;
}

// required int32 offset = 4;
inline bool WriteReq::has_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WriteReq::set_has_offset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WriteReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WriteReq::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
inline ::google::protobuf::int32 WriteReq::offset() const {
  return offset_;
}
inline void WriteReq::set_offset(::google::protobuf::int32 value) {
  set_has_offset();
  offset_ = value;
}

// -------------------------------------------------------------------

// WriteRep

// required int32 returnVal = 1;
inline bool WriteRep::has_returnval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteRep::set_has_returnval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteRep::clear_has_returnval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteRep::clear_returnval() {
  returnval_ = 0;
  clear_has_returnval();
}
inline ::google::protobuf::int32 WriteRep::returnval() const {
  return returnval_;
}
inline void WriteRep::set_returnval(::google::protobuf::int32 value) {
  set_has_returnval();
  returnval_ = value;
}

// -------------------------------------------------------------------

// ReadReq

// required int64 chunkId = 1;
inline bool ReadReq::has_chunkid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadReq::set_has_chunkid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadReq::clear_has_chunkid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadReq::clear_chunkid() {
  chunkid_ = GOOGLE_LONGLONG(0);
  clear_has_chunkid();
}
inline ::google::protobuf::int64 ReadReq::chunkid() const {
  return chunkid_;
}
inline void ReadReq::set_chunkid(::google::protobuf::int64 value) {
  set_has_chunkid();
  chunkid_ = value;
}

// required int32 offset = 2;
inline bool ReadReq::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadReq::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadReq::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadReq::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
inline ::google::protobuf::int32 ReadReq::offset() const {
  return offset_;
}
inline void ReadReq::set_offset(::google::protobuf::int32 value) {
  set_has_offset();
  offset_ = value;
}

// required int32 length = 3;
inline bool ReadReq::has_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReadReq::set_has_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReadReq::clear_has_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReadReq::clear_length() {
  length_ = 0;
  clear_has_length();
}
inline ::google::protobuf::int32 ReadReq::length() const {
  return length_;
}
inline void ReadReq::set_length(::google::protobuf::int32 value) {
  set_has_length();
  length_ = value;
}

// -------------------------------------------------------------------

// ReadRep

// required int32 returnVal = 1;
inline bool ReadRep::has_returnval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadRep::set_has_returnval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadRep::clear_has_returnval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadRep::clear_returnval() {
  returnval_ = 0;
  clear_has_returnval();
}
inline ::google::protobuf::int32 ReadRep::returnval() const {
  return returnval_;
}
inline void ReadRep::set_returnval(::google::protobuf::int32 value) {
  set_has_returnval();
  returnval_ = value;
}

// required string data = 2;
inline bool ReadRep::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadRep::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadRep::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadRep::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& ReadRep::data() const {
  return *data_;
}
inline void ReadRep::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void ReadRep::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void ReadRep::set_data(const char* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReadRep::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* ReadRep::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace myfs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FileSystem_2eproto__INCLUDED
